version: "3.8"

# startup order: database -> server -> client

services:
  go-server:
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8080:8080"
    expose:
      - 8080
    env_file:
      - .env
    healthcheck:
      test: curl -f http://localhost:8080/api-health || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      postgres-db:
        condition: service_healthy

  svelte-client:
    build: 
      context: ./frontend/
      dockerfile: Dockerfile
    restart: on-failure
    ports: 
      - "3000:3000"
    expose:
      - 3000
    env_file:
      - .env
    depends_on:
      go-server:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
  
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    env_file:
      - .env
    volumes:
      - ./backend/db/data:/var/lib/postgres/data/
      - ./backend/db/backups:/backups
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3